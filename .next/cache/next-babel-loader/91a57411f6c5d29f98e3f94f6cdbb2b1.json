{"ast":null,"code":"import { configureStore, combineReducers, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { reservationSlice } from './lib/slices/reservationSlice';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst persistConfig = {\n  key: 'root',\n  storage\n};\nexport const mainReducer = combineReducers({\n  [reservationSlice.name]: reservationSlice.reducer\n});\nconst persistedReducer = persistReducer(persistConfig, mainReducer); // export default configureStore({\n//   reducer: reservationSlice.reducer,\n//   devTools: true,\n// });\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: [...getDefaultMiddleware({\n    serializableCheck: false\n  })]\n});\nexport default store;\npersistStore(store);","map":{"version":3,"sources":["/Users/timurzakirov/Documents/self/nextJsReservation/store.js"],"names":["configureStore","combineReducers","getDefaultMiddleware","reservationSlice","persistStore","persistReducer","storage","persistConfig","key","mainReducer","name","reducer","persistedReducer","store","middleware","serializableCheck"],"mappings":"AAAA,SACEA,cADF,EAEEC,eAFF,EAGEC,oBAHF,QAIO,kBAJP;AAKA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBF,EAAAA;AAFoB,CAAtB;AAKA,OAAO,MAAMG,WAAW,GAAGR,eAAe,CAAC;AACzC,GAACE,gBAAgB,CAACO,IAAlB,GAAyBP,gBAAgB,CAACQ;AADD,CAAD,CAAnC;AAIP,MAAMC,gBAAgB,GAAGP,cAAc,CAACE,aAAD,EAAgBE,WAAhB,CAAvC,C,CAEA;AACA;AACA;AACA;;AAEA,MAAMI,KAAK,GAAGb,cAAc,CAAC;AAC3BW,EAAAA,OAAO,EAAEC,gBADkB;AAE3BE,EAAAA,UAAU,EAAE,CAAC,GAAGZ,oBAAoB,CAAC;AAAEa,IAAAA,iBAAiB,EAAE;AAArB,GAAD,CAAxB;AAFe,CAAD,CAA5B;AAKA,eAAeF,KAAf;AAEAT,YAAY,CAACS,KAAD,CAAZ","sourcesContent":["import {\n  configureStore,\n  combineReducers,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport { reservationSlice } from './lib/slices/reservationSlice';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nexport const mainReducer = combineReducers({\n  [reservationSlice.name]: reservationSlice.reducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, mainReducer);\n\n// export default configureStore({\n//   reducer: reservationSlice.reducer,\n//   devTools: true,\n// });\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: [...getDefaultMiddleware({ serializableCheck: false })],\n});\n\nexport default store;\n\npersistStore(store);\n"]},"metadata":{},"sourceType":"module"}