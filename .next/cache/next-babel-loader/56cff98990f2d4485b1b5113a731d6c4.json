{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { configureStore, combineReducers, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { reservationSlice } from './lib/slices/reservationSlice';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nvar persistConfig = {\n  key: 'root',\n  storage: storage\n};\nexport var mainReducer = combineReducers(_defineProperty({}, reservationSlice.name, reservationSlice.reducer));\nvar persistedReducer = persistReducer(persistConfig, mainReducer); // export default configureStore({\n//   reducer: reservationSlice.reducer,\n//   devTools: true,\n// });\n\nvar store = configureStore({\n  reducer: persistedReducer,\n  middleware: _toConsumableArray(getDefaultMiddleware({\n    serializableCheck: false\n  }))\n});\nexport default store;\npersistStore(store);","map":{"version":3,"sources":["/Users/timurzakirov/Documents/self/nextJsReservation/store.js"],"names":["configureStore","combineReducers","getDefaultMiddleware","reservationSlice","persistStore","persistReducer","storage","persistConfig","key","mainReducer","name","reducer","persistedReducer","store","middleware","serializableCheck"],"mappings":";;AAAA,SACEA,cADF,EAEEC,eAFF,EAGEC,oBAHF,QAIO,kBAJP;AAKA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBF,EAAAA,OAAO,EAAPA;AAFoB,CAAtB;AAKA,OAAO,IAAMG,WAAW,GAAGR,eAAe,qBACvCE,gBAAgB,CAACO,IADsB,EACfP,gBAAgB,CAACQ,OADF,EAAnC;AAIP,IAAMC,gBAAgB,GAAGP,cAAc,CAACE,aAAD,EAAgBE,WAAhB,CAAvC,C,CAEA;AACA;AACA;AACA;;AAEA,IAAMI,KAAK,GAAGb,cAAc,CAAC;AAC3BW,EAAAA,OAAO,EAAEC,gBADkB;AAE3BE,EAAAA,UAAU,qBAAMZ,oBAAoB,CAAC;AAAEa,IAAAA,iBAAiB,EAAE;AAArB,GAAD,CAA1B;AAFiB,CAAD,CAA5B;AAKA,eAAeF,KAAf;AAEAT,YAAY,CAACS,KAAD,CAAZ","sourcesContent":["import {\n  configureStore,\n  combineReducers,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport { reservationSlice } from './lib/slices/reservationSlice';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nexport const mainReducer = combineReducers({\n  [reservationSlice.name]: reservationSlice.reducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, mainReducer);\n\n// export default configureStore({\n//   reducer: reservationSlice.reducer,\n//   devTools: true,\n// });\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: [...getDefaultMiddleware({ serializableCheck: false })],\n});\n\nexport default store;\n\npersistStore(store);\n"]},"metadata":{},"sourceType":"module"}